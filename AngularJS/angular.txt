angular with html --- ng-directives


ng-app-- angularjs application

ng-model-- binds html control values with application data

ng-bind -- binds application data to html view


<html>
<body>
<div ng-app="">
<input type="text" ng-model="username">
<p ng-bind="username"></p>


</div>
</body>
</html>


Example2

<div ng-app="" ng-init="username='Kavish'">
<p ng-bind="username"></p>
</div>

want to implements data validation

<div ng-app="" data-ng-init="username='Kavish'">
<p data-ng-bind="username"></p>
</div>


Expression


<p>{{5+5}}}</p>


<html>
<body>
<div ng-app="">
<input type="text" ng-model="username">
<p>{{username}}</p>


</div>
</body>
</html>

**********************************************************
Controller-- control the data
It is just like javascript object

ng-controller-- to define application controller

<div ng-app="Reg" ng-controller="RegCtrl">
<input type="text" ng-model="name">
<input type="number" ng-model="age">

Display information {{name+" "+age}}
</div>

<script>
var app=angular.module('Reg', []);
app.controller('RegCtrl', function($scope){
	$scope.name="Anisha";
	$scope.age=23;

}
);

</script>


how to add functions in controller

<div ng-app="Reg" ng-controller="RegCtrl">
<input type="text" ng-model="name">
<input type="number" ng-model="age">

Display information {{display()}}
</div>

<script>
var app=angular.module('Reg', []);
app.controller('RegCtrl', function($scope){
	$scope.name="Anisha";
	$scope.age=23;

	$scope.display=function(){
		return $scope.name+" "+$scope.age;
	} 

}
);

</script>

*********************************************************************   

How to add External Controller file

<div ng-app="Reg" ng-controller="RegCtrl">
<input type="text" ng-model="name">
<input type="number" ng-model="age">

Display information {{display()}}
</div>
<script src="RegController.js"></script>






RegController.js

var app=angular.module('Reg', []);
app.controller('RegCtrl', function($scope){
	$scope.name="Anisha";
	$scope.age=23;

	$scope.display=function(){
		return $scope.name+" "+$scope.age;
	} 

}
);

*************************************************************
How to create objects in controller
RegController.js 


var app=angular.module('Reg', []);
app.controller('RegCtrl', function($scope){
	$scope.info= [

		{name: 'Jyoti', age: 34},
		{name: 'Moni', age: 24}

		];		

);



Html file
<div ng-app="Reg" ng-controller="RegCtrl">
<table>
<tr ng-repeat="row in info">
	<td>{{row.name}}</td>
	<td>{{row.age}}</td>
	</tr>
</table>

</div>

<script src="RegController.js"></script>

*****************************************************************

$rootScope  -- there are some properties which are common for all controllers that you can access through rootscope. 

<body ng-app="myApp">

<h1>{{name}}</h1>-- Stratsapp

<div ng-controller="ctrl1">
	<h1>{{name}}</h1>
</div>


<script>
var app=angular.module('myApp',[]);-- []-- always write down only dependent modules
app.run(function($rootScope){
	$rootScope.name='Stratsapp';
});

app.controller('ctrl1' fuction($scope){

	$scope.name="Geetha";
	});
}




</script>

*********************************************************
how to create own directives

name must be in camel case -- displayInfo

we can use adirective by using: element name, attribute class, comment

<body ng-app="myapp">

<displayInfo></displayInfo>

<script>
var app=angular.module("myApp",[]);
app.directive("displayInfo", function(){

	return{
		restrict : 'E',
		template : "<h2> I am creating my directive</h1>"
	};
});
</script>

**********************************************************
directive as class
<body ng-app="myapp">


<div class="displayInfo">

<script>
var app=angular.module("myApp",[]);
app.directive("displayInfo", function(){

	return{
		restrict : "C",
		template : "<h2> I am creating my directive</h1>"
	};
});
</script>
********************************************************

directive as comment

<body ng-app="myapp">


<!--directive: displayInfo -->

<script>
var app=angular.module("myApp",[]);
app.directive("displayInfo", function(){

	return{
		restrict : "M",
		replace= true,
		template : "<h2> I am creating my directive</h1>"
	};
});
</script>
*************************************************************
	directive as attribute
<body ng-app="myapp">


<div displayInfo>

<script>
var app=angular.module("myApp",[]);
app.directive("displayInfo", function(){

	return{
		restrict : "A",
		template : "<h2> I am creating my directive</h1>"
	};
});
</script>
******************************************
E- Element
A- attribute
C- class
M - comment




****************************************************************
			ng -model  -- binding -- two way binding
<body>
<form ng-app="" name="regForm">
	<input type="email" name="mymail" ng-model="text">
	<span ng-show="regForm.mymail.$error.email">Not a valid e-mail address</span>

****************

ng-model - if any property is not available then angular creates it
it provides status for application data

valid  -- meets all criteria
dirty -- value has been changed
touched - the field has been in focus
error

<body>
<form ng-app="" name="regForm" ng-init="text='nidhi@abc.com'">
	<input type="email" name="mymail" ng-model="text" required>
	<span ng-show="regForm.mymail.$error.email">Not a valid e-mail address</span>

<p>
{{regForm.mymail.$valid}}
{{regForm.mymail.$dirty}}
{{regForm.mymail.$touched}}

</p>




